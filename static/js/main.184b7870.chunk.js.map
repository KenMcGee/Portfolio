{"version":3,"sources":["card.js","nav.js","projects.js","cardCounter.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","name","blurb","src","process","hero","alt","Nav","projects","auxImages","description","CardCounter","count","max","App","useState","index","setIndex","collection","i","length","push","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAceA,EAdF,SAACC,GACV,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAf,UACI,6BAAKD,EAAME,OACX,4BACKF,EAAMG,WAGf,qBAAKC,IAAKC,aAAyBL,EAAMM,KAAMC,IAAKP,EAAME,WCCvDM,EARH,WACR,OACI,qBAAKP,UAAU,MAAf,SACI,oDCkBGQ,EAvBE,CACb,CACIP,KAAM,IACNI,KAAM,+BACNI,UAAU,GACVP,MAAM,mBACNQ,YAAa,yBAEjB,CACIT,KAAM,IACNI,KAAM,+BACNI,UAAU,GACVP,MAAM,kBACNQ,YAAa,yBAEjB,CACIT,KAAM,IACNI,KAAM,+BACNI,UAAU,GACVP,MAAM,kBACNQ,YAAa,0BCVNC,EARK,SAACZ,GACjB,OACQ,+BACIA,EAAMa,MADV,MACoBb,EAAMc,QCwCvBC,EApCH,WAGV,IAFA,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAa,GACRC,EAAI,EAAGA,EAAIX,EAASY,OAAQD,IACnCD,EAAWG,KAAK,cAAC,EAAD,CAAMpB,KAAMO,EAASW,GAAT,KAAqBd,KAAMG,EAASW,GAAT,KAAqBjB,MAAOM,EAASW,GAAT,SAmBrF,OACE,gCACE,cAAC,EAAD,IACA,sBAAKnB,UAAU,cAAf,UACA,oBAAIsB,QAZS,WAEbL,EADED,EAAQ,EACDA,EAAQ,EAERE,EAAWE,OAAO,GAEfF,EAAWF,OAMvB,eACE,cAAC,EAAD,CAAaJ,MAAOI,EAAM,EAAGH,IAAKL,EAASY,SAC3C,oBAAIE,QAtBU,WACdN,EAAQE,EAAWE,OAAO,EAC5BH,EAASD,EAAQ,GAEjBC,EAAS,GAEGC,EAAWF,OAgBrB,kBAEDE,EAAWF,OC5BHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.184b7870.chunk.js","sourcesContent":["const Card = (props) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"copy\">\r\n                <h1>{props.name}</h1>\r\n                <p>\r\n                    {props.blurb}\r\n                </p>\r\n            </div>\r\n            <img src={process.env.PUBLIC_URL + props.hero} alt={props.name}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h1>Nav Placeholder</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","const projects = [\r\n    {\r\n        name: \"A\",\r\n        hero: \"/images/A_Hero_1900x1200.jpg\",\r\n        auxImages:'',\r\n        blurb:\"Project A Bleurb\",\r\n        description: \"Project A Description\"\r\n    },\r\n    {\r\n        name: \"B\",\r\n        hero: \"/images/B_Hero_1900x1200.jpg\",\r\n        auxImages:'',\r\n        blurb:\"Project B Blurb\",\r\n        description: \"Project B Description\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        hero: '/images/C_Hero_1900x1200.jpg',\r\n        auxImages:'',\r\n        blurb:\"Project C Blurb\",\r\n        description: \"Project C Description\"\r\n    }\r\n];\r\nexport default projects;","import React from \"react\";\r\n\r\nconst CardCounter = (props) => {\r\n    return (\r\n            <h2>\r\n               {props.count} / {props.max}\r\n            </h2>\r\n    );\r\n}\r\n\r\nexport default CardCounter;","import react from 'react';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Card from './card.js';\nimport Nav from './nav.js';\nimport projects from './projects.js';\nimport CardCounter from './cardCounter.js';\nimport CardForward from './cardForward.js';\n\nconst App = () => {\n  const [index, setIndex] = useState(0);\n  let collection = [];\n  for (var i = 0; i < projects.length; i++) {\n    collection.push(<Card name={projects[i]['name']} hero={projects[i]['hero']} blurb={projects[i]['blurb']}/>);\n  };\n  let currentCard = [];\n  const cardForward = () => {\n    if (index < collection.length-1) {\n      setIndex(index + 1);\n    } else {\n      setIndex(0)\n    };\n    currentCard = collection.index;\n  };\n  const cardBack = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n    } else {\n      setIndex(collection.length-1)\n    };\n    currentCard = collection.index;\n  };\n  return (\n    <div>\n      <Nav />\n      <div className=\"cardCounter\">\n      <h3 onClick={cardBack}>&lt;</h3>\n        <CardCounter count={index+1} max={projects.length}/>\n        <h3 onClick={cardForward}>&gt;</h3>\n      </div>\n      {collection[index]}\n    </div>\n  )\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}