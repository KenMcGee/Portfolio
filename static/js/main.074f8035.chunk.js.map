{"version":3,"sources":["card.js","nav.js","projects.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","name","blurb","src","hero","alt","Nav","projects","auxImages","description","App","state","cardCounter","collection","i","length","push","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAdF,SAACC,GACV,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAf,UACI,6BAAKD,EAAME,OACX,4BACKF,EAAMG,WAGf,qBAAKC,IAAKJ,EAAMK,KAAMC,IAAKN,EAAME,WCE9BK,EARH,WACR,OACI,qBAAKN,UAAU,MAAf,SACI,oDCiBGO,EAvBE,CACb,CACIN,KAAM,IACNG,KAAM,+BACNI,UAAU,GACVN,MAAM,kBACNO,YAAa,yBAEjB,CACIR,KAAM,IACNG,KAAM,+BACNI,UAAU,GACVN,MAAM,kBACNO,YAAa,yBAEjB,CACIR,KAAM,IACNG,KAAM,+BACNI,UAAU,GACVN,MAAM,kBACNO,YAAa,0BCSNC,E,kDArBb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,YAAa,GAHE,E,0CAOnB,WAEE,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IACrCD,EAAWG,KAAK,cAAC,EAAD,CAAMf,KAAMM,EAASO,GAAT,KAAqBV,KAAMG,EAASO,GAAT,KAAqBZ,MAAOK,EAASO,GAAT,SAEjF,OACE,gCACE,cAAC,EAAD,IACCD,S,GAhBOI,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.074f8035.chunk.js","sourcesContent":["const Card = (props) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"copy\">\r\n                <h1>{props.name}</h1>\r\n                <p>\r\n                    {props.blurb}\r\n                </p>\r\n            </div>\r\n            <img src={props.hero} alt={props.name}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h1>Nav Placeholder</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","const projects = [\r\n    {\r\n        name: \"A\",\r\n        hero: \"/images/A_Hero_1900x1200.jpg\",\r\n        auxImages:'',\r\n        blurb:\"Project A Blurb\",\r\n        description: \"Project A Description\"\r\n    },\r\n    {\r\n        name: \"B\",\r\n        hero: \"/images/B_Hero_1900x1200.jpg\",\r\n        auxImages:'',\r\n        blurb:\"Project B Blurb\",\r\n        description: \"Project B Description\"\r\n    },\r\n    {\r\n        name: \"C\",\r\n        hero: \"/images/C_Hero_1900x1200.jpg\",\r\n        auxImages:'',\r\n        blurb:\"Project C Blurb\",\r\n        description: \"Project C Description\"\r\n    }\r\n];\r\nexport default projects;","import react from 'react';\nimport React from 'react';\nimport './App.css';\nimport Card from './card.js';\nimport Nav from './nav.js';\nimport projects from './projects.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardCounter: 0\n    };\n  }\n  \n  render() {\n    let collection = [];\n    for (var i = 0; i < projects.length; i++) {\n    collection.push(<Card name={projects[i]['name']} hero={projects[i]['hero']} blurb={projects[i]['blurb']}/>);\n    };\n      return (\n        <div>\n          <Nav />\n          {collection}\n        </div>\n      )\n    }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}